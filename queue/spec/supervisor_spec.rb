require 'spec_helper'

include TxghQueue

describe Supervisor do
  describe '.supervise' do
    it 'provides a handy shortcut to wrap a block with supervising' do
      response = described_class.supervise { raise StandardError }
      expect(response.status).to eq(Status.fail)
    end
  end

  describe '#execute' do
    it 'handles errors generated by the given block' do
      responder = described_class.new { raise StandardError }
      expect(responder.execute.status).to eq(Status.fail)
    end

    it 'handles error responses generated by the given block' do
      responder = described_class.new do
        TxghServer::Response.new(401, 'Unauthorized')
      end

      expect(responder.execute.status).to eq(Status.fail)
    end

    it 'handles non-error responses generated by the given block' do
      responder = described_class.new do
        TxghServer::Response.new(200, 'Ok')
      end

      expect(responder.execute.status).to eq(Status.ok)
    end

    it "raises an error if error handling logic can't be determined" do
      responder = described_class.new { 'unexpected response' }
      expect { responder.execute }.to raise_error(UnexpectedResponse)
    end
  end
end
